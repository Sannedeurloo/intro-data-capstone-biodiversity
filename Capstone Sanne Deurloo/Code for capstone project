(1)

import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

# Loading the Data
species = pd.read_csv('species_info.csv')

# print the count of the different species
species_count = species.scientific_name.nunique()
print(species_count)

# print the count of the different categories
species_type = species.category.nunique()
print(species_type)

# print the count of conservation statuses
conservation_statuses = species.conservation_status.unique()
print(conservation_statuses)

# print the count of species per conservation status
conservation_counts = species.groupby('conservation_status').scientific_name.nunique().reset_index()
print(conservation_counts)

# fill in the null values
species.fillna('No Intervention', inplace = True)

# print the count of species per conservation status on the fixed dataset
conservation_counts_fixed = species.groupby('conservation_status').scientific_name.nunique().reset_index()
print(conservation_counts_fixed)

(2)
import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

# Loading the Data
species = pd.read_csv('species_info.csv')

# print the count of the different species
species_count = species.scientific_name.nunique()
print(species_count)

# print the count of the different categories
species_type = species.category.nunique()
print(species_type)

# print the count of conservation statuses
conservation_statuses = species.conservation_status.unique()
print(conservation_statuses)

# print the count of species per conservation status
conservation_counts = species.groupby('conservation_status').scientific_name.nunique().reset_index()
print(conservation_counts)

# fill in the null values
species.fillna('No Intervention', inplace = True)

# print the count of species per conservation status on the fixed dataset
conservation_counts_fixed = species.groupby('conservation_status').scientific_name.nunique().reset_index()
print(conservation_counts_fixed)

(3)
import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

# Loading the Data
species = pd.read_csv('species_info.csv')

# print the count of the different species
species_count = species.scientific_name.nunique()
print(species_count)

# print the count of the different categories
species_type = species.category.nunique()
print(species_type)

# print the count of conservation statuses
conservation_statuses = species.conservation_status.unique()
print(conservation_statuses)

# print the count of species per conservation status
conservation_counts = species.groupby('conservation_status').scientific_name.nunique().reset_index()
print(conservation_counts)

# fill in the null values
species.fillna('No Intervention', inplace = True)

# print the count of species per conservation status on the fixed dataset
conservation_counts_fixed = species.groupby('conservation_status').scientific_name.nunique().reset_index()
print(conservation_counts_fixed)

(4)
import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

# Loading the Data
species = pd.read_csv('species_info.csv')

# print the count of the different species
species_count = species.scientific_name.nunique()
print(species_count)

# print the count of the different categories
species_type = species.category.nunique()
print(species_type)

# print the count of conservation statuses
conservation_statuses = species.conservation_status.unique()
print(conservation_statuses)

# print the count of species per conservation status
conservation_counts = species.groupby('conservation_status').scientific_name.nunique().reset_index()
print(conservation_counts)

# fill in the null values
species.fillna('No Intervention', inplace = True)

# print the count of species per conservation status on the fixed dataset
conservation_counts_fixed = species.groupby('conservation_status').scientific_name.nunique().reset_index()
print(conservation_counts_fixed)

(5)
import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

species = pd.read_csv('species_info.csv')

species.fillna('No Intervention', inplace = True)

protection_counts = species.groupby('conservation_status')\
    .scientific_name.nunique().reset_index()\
    .sort_values(by='scientific_name')
    
print(protection_counts)

plt.figure(figsize=(10, 4))
ax = plt.subplot()
plt.bar(range(len(protection_counts)),protection_counts.scientific_name.values)
ax.set_xticks(range(len(protection_counts)))
ax.set_xticklabels(protection_counts.conservation_status.values)
plt.ylabel('Number of Species')
plt.title('Conservation Status by Species')
labels = [e.get_text() for e in ax.get_xticklabels()]
plt.show()

(6)
import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

species = pd.read_csv('species_info.csv')

species.fillna('No Intervention', inplace = True)

species['is_protected'] = species.conservation_status != 'No Intervention'

category_counts = species.groupby(['category', 'is_protected']).scientific_name.nunique().reset_index()

category_pivot = category_counts.pivot(columns='is_protected',
                      index='category',
                      values='scientific_name')\
                      .reset_index()
  
category_pivot.columns = ['category', 'not_protected', 'protected']

category_pivot['percent_protected'] = category_pivot.protected / (category_pivot.protected + category_pivot.not_protected)

print category_pivot

(7)
import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

species = pd.read_csv('species_info.csv')

species.fillna('No Intervention', inplace = True)

species['is_protected'] = species.conservation_status != 'No Intervention'

category_counts = species.groupby(['category', 'is_protected']).scientific_name.nunique().reset_index()

category_pivot = category_counts.pivot(columns='is_protected',
                      index='category',
                      values='scientific_name')\
                      .reset_index()
  
category_pivot.columns = ['category', 'not_protected', 'protected']

category_pivot['percent_protected'] = category_pivot.protected / (category_pivot.protected + category_pivot.not_protected)

print category_pivot

(8)
import codecademylib
import pandas as pd
from matplotlib import pyplot as plt
from scipy.stats import chi2_contingency

contingency = [[30, 146],
              [75, 413]]
print(contingency)

chi2,pval,dof,expected = chi2_contingency(contingency)
print(pval)

contingency2 = [[5, 73],
              [30, 146]]
print(contingency2)

chi2,pval2,dof,expected = chi2_contingency(contingency2)
print(pval2)

(9)
import codecademylib
import pandas as pd
from matplotlib import pyplot as plt
from scipy.stats import chi2_contingency

contingency = [[30, 146],
              [75, 413]]
print(contingency)

chi2,pval,dof,expected = chi2_contingency(contingency)
print(pval)

contingency2 = [[5, 73],
              [30, 146]]
print(contingency2)

chi2,pval2,dof,expected = chi2_contingency(contingency2)
print(pval2)

(10)
import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

species = pd.read_csv('species_info.csv')
species.fillna('No Intervention', inplace = True)
species['is_protected'] = species.conservation_status != 'No Intervention'

observations = pd.read_csv('observations.csv')

species['is_sheep'] = species.common_names.apply(lambda x: 'Sheep' in x)

species_is_sheep = species[species.is_sheep]

print species_is_sheep

sheep_species = species[(species.is_sheep) & (species.category == 'Mammal')]

print sheep_species

sheep_observations = pd.merge(sheep_species, observations, how='left')

print(sheep_observations.head(10))

obs_by_park = sheep_observations.groupby('park_name').observations.sum().reset_index()

print(obs_by_park)

(11)
import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

species = pd.read_csv('species_info.csv')
species.fillna('No Intervention', inplace = True)
species['is_protected'] = species.conservation_status != 'No Intervention'

observations = pd.read_csv('observations.csv')

species['is_sheep'] = species.common_names.apply(lambda x: 'Sheep' in x)

species_is_sheep = species[species.is_sheep]

print species_is_sheep

sheep_species = species[(species.is_sheep) & (species.category == 'Mammal')]

print sheep_species

sheep_observations = pd.merge(sheep_species, observations, how='left')

print(sheep_observations.head(10))

obs_by_park = sheep_observations.groupby('park_name').observations.sum().reset_index()

print(obs_by_park)

(12)
import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

species = pd.read_csv('species_info.csv')
species.fillna('No Intervention', inplace = True)
species['is_protected'] = species.conservation_status != 'No Intervention'

observations = pd.read_csv('observations.csv')

species['is_sheep'] = species.common_names.apply(lambda x: 'Sheep' in x)

species_is_sheep = species[species.is_sheep]

print species_is_sheep

sheep_species = species[(species.is_sheep) & (species.category == 'Mammal')]

print sheep_species

sheep_observations = pd.merge(sheep_species, observations, how='left')

print(sheep_observations.head(10))

obs_by_park = sheep_observations.groupby('park_name').observations.sum().reset_index()

print(obs_by_park)

(13)
import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

species = pd.read_csv('species_info.csv')
species['is_sheep'] = species.common_names.apply(lambda x: 'Sheep' in x)
sheep_species = species[(species.is_sheep) & (species.category == 'Mammal')]

observations = pd.read_csv('observations.csv')

sheep_observations = observations.merge(sheep_species)

obs_by_park = sheep_observations.groupby('park_name').observations.sum().reset_index()

print(obs_by_park.head(10))

plt.figure(figsize=(16, 4))
ax = plt.subplot()
plt.bar(range(len(obs_by_park)),
        obs_by_park.observations.values)
ax.set_xticks(range(len(obs_by_park)))
ax.set_xticklabels(obs_by_park.park_name.values)
plt.ylabel('Number of Observations')
plt.title('Observations of Sheep per Week')
plt.show()

(14)
baseline = 15

minimum_detectable_effect = (100*5.0)/15

sample_size_per_variant = 870

yellowstone_weeks_observing = sample_size_per_variant/507.0

bryce_weeks_observing = sample_size_per_variant/250.0
